{
    "mftest": "In {lang} there {NUM, plural,one{is one for #}other{others for #}}",
    "should ignore \n standalone | mixed with \n new lines 42 | value - 42": "should ignore \n standalone | mixed with \n new lines 42 | value - 42",
    "Standalone | 42 symbol somewhere | in the text | 1| 0": "Standalone | 42 symbol somewhere | in the text | 1| 0",
    "Hello {{{name}}}": "Hello {{{name}}}",
    "few sentences. with .": "few sentences with Dot",
    "last character is .": "last character is Dot",
    ". is first character": "Dot is first character",
    "repeated argument": "%1$s, %1$s, %1$s",
    "ordered arguments with numbers": "%2$d then %1$s then %3$.2f",
    "ordered arguments": "%2$s then %1$s",
    "nested.deep.plural_one": "nested.deep.plural",
    "nested.deep.plural_other": "1",
    "another": {
        "nested": {
            "extra": {
                "mustacheprintf": {
                    "example": "[0] %s is zero rule for {{me}}|[2,5] %s is between two and five (included) for {{me}}|and a catchall rule for {{me}} to get my number %s"
                },
                "mustache": {
                    "example": "[0] a zero rule for {{me}}|[2,5] two to five (included) for {{me}}|and a catchall rule for {{me}}"
                },
                "lazy": {
                    "example_one": "",
                    "example_other": "[0] a zero rule|[2,5] two to five (included)|and a catchall rule"
                },
                "deep": {
                    "example_one": "The default 'one' rule",
                    "example_other": "[0] a zero rule|[2,5] two to five (included)|and a catchall rule"
                }
            }
        }
    },
    "greeting": {
        "plurals_one": "The default 'one' rule",
        "plurals_other": "[0] a zero rule|[2,5] two to five (included)|and a catchall rule",
        "placeholder": {
            "loud": "greeting.placeholder.loud",
            "informal": "Hi %s",
            "formal": "Hello %s"
        },
        "informal": "Hi",
        "formal": "Hello"
    },
    "format": {
        "time": "h:mm:ss a",
        "date": "MM\/DD\/YYYY"
    },
    "Hello {{name}}, how was your %s?": "Hello {{name}}, how was your %s?",
    "Hello {{name}}": "Hello {{name}}",
    "Hello %s": "Hello %s",
    "plurals from eternity": "[,0] this was born long before|but only lt 0",
    "plurals to eternity": "[0,] this will last forever|but only gt 0",
    "plurals in any order_one": "The default 'one' rule",
    "plurals in any order_other": "[0] a zero rule|and a catchall rule|[2,5] two to five (included)",
    "plurals with intervals as string (excluded)_one": "The default 'one' rule",
    "plurals with intervals as string (excluded)_other": "[0] a zero rule|]2,5[ two to five (excluded)|and a catchall rule",
    "plurals with intervals as string_one": "The default 'one' rule",
    "plurals with intervals as string_other": "[0] a zero rule|[2,5] two to five (included)|and a catchall rule",
    "plurals with intervals in _other_ missing _one__one": "",
    "plurals with intervals in _other_ missing _one__other": "[0] a zero rule|[2,5] two to five (included)|and a catchall rule",
    "plurals with intervals in string (no object)": "[0] a zero rule|[2,5] two to five (included)|and a catchall rule",
    "There is one monkey in the tree_one": "There is one monkey in the tree",
    "There is one monkey in the tree_other": "There are %d monkeys in the tree",
    "There is one monkey in the %s_one": "There is one monkey in the %s",
    "There is one monkey in the %s_other": "There are %d monkeys in the %s",
    "tree": "tree",
    "There is one monkey in the %%s_one": "There is one monkey in the %%s",
    "There is one monkey in the %%s_other": "There are %d monkeys in the %%s",
    "nested": {
        "path": {
            "sub": "nested.path.sub"
        },
        "deep": {
            "plural_one": "plural",
            "plural_other": "plurals"
        }
    },
    "cats": {
        "n_one": "%s cat",
        "n_other": "%s cats"
    },
    "cat_one": "%s cat",
    "cat_other": "%s cats",
    "%s star_one": "%s star",
    "%s star_other": "%s stars",
    "%d star_one": "%d star",
    "%d star_other": "%d stars",
    "%f star_one": "%f star",
    "%f star_other": "%f stars",
    "%s cat_one": "%s cat",
    "%s cat_other": "%s cats",
    "Howdy": "Howdy",
    "Hi": "Hi",
    "Hello %s, how are you today? How was your %s.": "Hello %s, how are you today? How was your %s.",
    "weekend": "weekend",
    "Hello %s, how are you today?": "Hello %s, how are you today?",
    "Hello": "Hello",
    "Empty": ""
}